<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	 http://www.springframework.org/schema/beans 
	 http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	  http://www.springframework.org/schema/context 
	  http://www.springframework.org/schema/context/spring-context-3.2.xsd
	   http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd 
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
	   http://www.springframework.org/schema/task 
	   http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	

	<bean id="dataSourceA" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
	<property name="uniqueResourceName"><value>DataSourceA</value></property>
	<property name="xaDataSourceClassName"><value>oracle.jdbc.xa.client.OracleXADataSource</value></property>
	<property name="xaProperties">
	    <props>
		<prop key="databaseName">XE</prop>
		<prop key="serverName">home</prop>
		<prop key="user">scott</prop>
		<prop key="password">tiger</prop>
		<prop key="URL">jdbc:oracle:thin:@home:1522:XE</prop>
	    </props>
	</property>
	<property name="minPoolSize"><value>1</value></property>
</bean>
	
<bean id="emfBean" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
	<property name="persistenceXmlLocation">
            <value>classpath*:META-INF/persistence.xml</value>
    </property>
		<property name="persistenceUnitName" value="PersistenceUnitA" />
		<property name="dataSource" ref="dataSourceA" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect" />
			</bean>
		</property>
	</bean>
	
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
		<property name="forceShutdown" value="false" />
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.J2eeUserTransaction">
		<property name="transactionTimeout" value="10" />
	</bean>

	<bean id="transactionManagerA" class="org.springframework.transaction.jta.JtaTransactionManager"
		depends-on="atomikosTransactionManager,atomikosUserTransaction">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
		<property name="allowCustomIsolationLevels" value="false" />
	</bean>
	
	
	<bean id="busFacade" class="com.business.BusinessFacade">
   	 <property name="transactionManager" ref="transactionManagerA" />
   	  <property name="entityManager">
        <bean class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
            <property name="entityManagerFactory" ref="emfBean" />
        </bean>
    </property> 
    <property name="jmsSender"    ref="jmsSender" />
<!-- <property name="jmsReceiver" ref="jmsReceiver" /> -->
  	</bean>
  	
  	
    <!-- JNDI Environment Template -->
    <bean id="jndiTemplate" class="org.springframework.jms.core.JmsTemplate">
         <property name = "connectionFactory">
            <ref bean = "atomikosConnectionFactory"/>
		 </property>
		  <property name = "destinationResolver">
		            <ref bean = "jmsDestinationResolver"/>
		   </property>
		<property name = "defaultDestination">
            <ref bean = "jmsDestination"/>
   		</property>
		<property name="sessionTransacted" value="true"/>
		<property name="sessionAcknowledgeMode" value="0"/>
		<property name="deliveryPersistent" value="true"/>
    </bean>
    
    <bean id="jmsSender" class="jms.pojo.JMSSender">
      <property name="jmsTemplate">
            <ref bean="jndiTemplate"/>
        </property>
     </bean>
     
      
     <!-- JMS Queue Template -->
     <jee:jndi-lookup id = "senderJmsQueueConnectionFactory" jndi-name = "java:comp/env/jms/MQConnectionFactory"/>
     <bean id = "jmsDestinationResolver" class = "org.springframework.jms.support.destination.JndiDestinationResolver"/>
     
	 <jee:jndi-lookup id="jmsDestination"      jndi-name="java:comp/env/jms/MQWriter" resource-ref="true" />
	 
	 <bean id="atomikosConnectionFactory" class="com.atomikos.jms.AtomikosConnectionFactoryBean" init-method="init" destroy-method="close">
	 <property name="localTransactionMode" value="false" />
      <property name="uniqueResourceName" value="ConnectionTransaction"/>
      <property name="xaConnectionFactory" ref="senderJmsQueueConnectionFactory"/>
   </bean>

      
    <!-- JMS Queue Connection Factory -->
   <!--  
   <bean id = "jmsDestination" class = "com.ibm.mq.jms.MQQueue" >
         <constructor-arg value = "MQReceiverQueue"/>
	</bean>
   <bean id="senderJmsQueueConnectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <property name="jndiTemplate">
            <ref bean="jndiTemplate"/>
        </property>
     <property name="jndiName">
            <value>MQSenderQCF</value>
        </property> 
        <property name="jndiName"> 
		<value>java:comp/env/jms/MQConnectionFactory</value> 
		</property> 
    </bean>
    
   <bean id="senderJmsQueueConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiTemplate">
            <ref bean="jndiTemplate"/>
        </property>
        <property name="jndiName">
            <value>MQSenderQCF</value>
        </property>
    </bean> -->
   
       <!-- Spring JMS Queue Connection Factory -->

       
<!--     <bean id="senderQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory">
            <ref bean="senderJmsQueueConnectionFactory"/>
        </property>
		<property name="defaultDestination"> 
		<ref bean="jmsDestinationResolverWriter" /> 
		</property> 
       </bean> -->
     

   <!--  
   		 <bean id="senderQueueConnectionFactory"
        class="org.springframework.jms.connection.SingleConnectionFactory">
        <property name="targetConnectionFactory">
            <ref bean="senderJmsQueueConnectionFactory"/>
        </property>
    </bean>
   <bean id="receiverQueueConnectionFactory"
        class="org.springframework.jms.connection.SingleConnectionFactory">
        <property name="targetConnectionFactory">
            <ref bean="reciverJmsQueueConnectionFactory"/>
        </property>
     </bean>
    
    <bean id="receiverQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory">
            <ref bean="receiverQueueConnectionFactory"/>
        </property>
        <property name="destinationResolver">
            <ref bean="jmsDestinationResolver"/>
        </property>
    
    </bean>

    <bean id="jmsDestinationResolver"
        class="org.springframework.jms.support.destination.JndiDestinationResolver">
        <property name="jndiTemplate">
            <ref bean="jndiTemplate"/>
        </property>
        <property name="cache">
            <value>true</value>
        </property>
    </bean>
    
        
        JMS Queue Connection Factory
    <bean id="reciverJmsQueueConnectionFactory"
        class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiTemplate">
            <ref bean="jndiTemplate"/>
        </property>
        <property name="jndiName">
            <value>MQReceiverQCF</value>
        </property>
    </bean>
    
    <bean id="jmsReceiver" class="jms.pojo.JMSReceiver">
      <property name="jmsTemplate">
            <ref bean="receiverQueueTemplate"/>
        </property>
    </bean> -->
    
 

</beans>